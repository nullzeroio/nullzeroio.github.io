<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NullZero.io</title>
    <link>https://www.nullzero.io/</link>
    <description>Recent content on NullZero.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.nullzero.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing Jumbo Frame Support on ESXi</title>
      <link>https://www.nullzero.io/posts/testing-jumbo-frame-support-esxi/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/testing-jumbo-frame-support-esxi/</guid>
      <description>You will need to SSH into the host to perform these commands.
This is the basic syntax
vmkping -4 -d -I &amp;lt;vmk-number&amp;gt; -s &amp;lt;packet-size&amp;gt; &amp;lt;address&amp;gt;   This is an example using vmk3 and vmk4, which we will assume is used for storage. We will use a packet size of 8400 bytes (can&amp;rsquo;t use 9000 b/c there won&amp;rsquo;t be enough room to allow for IP overhead) We will assume 192.168.1.10 is the address of the storage interface  vmkping -4 -d -I vmk3 -s 8400 192.</description>
    </item>
    
    <item>
      <title>Blog Migration</title>
      <link>https://www.nullzero.io/posts/blog-migration/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/blog-migration/</guid>
      <description>Stay tuned for more content as I continue to migrate posts from my old blog (vMotioned.com) over to this one. In short, I&amp;rsquo;m migrating away from a Wordpress hosted platform over to Hugo, hosted on GitHub.
I&amp;rsquo;m also going to try to add some fresh content, once the migration is complete.
Thanks!</description>
    </item>
    
    <item>
      <title>WorkLog PowerShell Module</title>
      <link>https://www.nullzero.io/posts/worklog-powershell-module/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/worklog-powershell-module/</guid>
      <description>As part of a new initiative, of sorts, I wanted a way to record daily accomplishments, which is something that I have thought about doing for quite some time, but never got enough motivation to actually do anything about it. That said, I decided to revisit, take action and come up with some requirements on what a workable solution would look like (for me):
 It needs to be easy to record entries (if it&amp;rsquo;s hard or cumbersome, it won&amp;rsquo;t have sustainability) It needs to fit into my daily workflow The format needs to be somewhat open/easy to move between different platforms (Mainly Windows &amp;amp; Mac OS) If possible, pick a solution that can sharpen a skill-set, in the process  Given each of those, my final solution ended up being quite simple: GitHub and GitHub Flavored Markdown (GFM) files.</description>
    </item>
    
    <item>
      <title>Locked Out of vCenter 5.1</title>
      <link>https://www.nullzero.io/posts/locked-out-of-vcenter-5-1/</link>
      <pubDate>Fri, 20 Sep 2013 15:38:39 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/locked-out-of-vcenter-5-1/</guid>
      <description>Recently, I was called in to help a client out with a vCenter 5.1 install and came across the somewhat common issue of being locked out of vCenter (which is most common after the upgrade process). After some investigation, it appeared the proper Identity Sources were configured and SSO, in general, looked okay. After scratching our heads a bit, I decided to take a look inside the vCenter DB and verify account/group access.</description>
    </item>
    
    <item>
      <title>PowerShell HTML Disk Space Report</title>
      <link>https://www.nullzero.io/posts/posh-html-disk-space-report/</link>
      <pubDate>Wed, 11 Sep 2013 23:57:58 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/posh-html-disk-space-report/</guid>
      <description>This is a recent HTML Disk Space report that I created which outputs a generic HTML report that contains server disk/partition space details. I schedule it to run weekly, but obviously you can use as you wish. In short, in reads in a list of servers from a text file, queries WMI for disk space detail, uses some expressions to format and calculate the space and then outputs the results into a report, sorted in ascending order by the percent of free space, per partition.</description>
    </item>
    
    <item>
      <title>Slow Mouse in Server 2008 VM Console</title>
      <link>https://www.nullzero.io/posts/slow-mouse-in-server-2008-vm-console/</link>
      <pubDate>Mon, 28 Jan 2013 22:51:10 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/slow-mouse-in-server-2008-vm-console/</guid>
      <description>A while back I created a note about how to fix the slow mouse issue that sometimes happens even after installing VMware tools on a Server 2008 guest. The process is as follows:
1. Make sure VMware tools is up to date
2. You may need to update the VM hardware versions if this fix does not work.
3. On the guest, open up the device manager and expand the Display adapters.</description>
    </item>
    
    <item>
      <title>Backing Up Host Configuration using PowerCLI</title>
      <link>https://www.nullzero.io/posts/backing-up-host-configuration-using-powercli-5-1/</link>
      <pubDate>Mon, 28 Jan 2013 22:29:16 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/backing-up-host-configuration-using-powercli-5-1/</guid>
      <description>An often overlooked and less prioritized thought in vSphere environments is backing up the actual host configuration. I figured it was worth a quick post, given the fact that it&amp;rsquo;s a fairly simple process via PowerCLI. This command should be the same for all versions of vSphere/PowerCLI, but I have only tested on 4.1-5.1.
Aside: This is just the basic command; there are plenty of other ways to automate this or use it in conjunction with another PowerCLI script; I&amp;rsquo;ll leave that up to you.</description>
    </item>
    
    <item>
      <title>MBR Align VM and Enabling SSH</title>
      <link>https://www.nullzero.io/posts/mbr-align-vm-enabling-ssh/</link>
      <pubDate>Wed, 14 Dec 2011 21:39:13 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/mbr-align-vm-enabling-ssh/</guid>
      <description>I got real sick and tired of the left click getting stuck in my MBR Align guest, midway through a vmdk alignment. While I did see some fixes, all I really needed was SSH enabled so I could run the necessary utilities from the command line.
To enable SSH on the MBR Align Suse VM, do the following:
 Open the shell
 Enter the below command:
sudo /etc/rc.d/./sshd start   Thats it; done.</description>
    </item>
    
    <item>
      <title>Nexus 1000v Max-Ports</title>
      <link>https://www.nullzero.io/posts/nexus-1000v-max-ports/</link>
      <pubDate>Wed, 14 Dec 2011 21:15:54 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/nexus-1000v-max-ports/</guid>
      <description>I have been meaning to post something about this for a little while. When deploying the Nexus 1000v, don&amp;rsquo;t forget to set the &amp;lsquo;Max-Ports&amp;rsquo; setting for each of your port-profiles. By default, the 1000v sets each port-profile up with only 32 ports. This presents a problem, for example, when you try to deploy your 33rd guest and you get an error that says that you are out of virtual ports. Not to worry, the fix easy and non-disruptive to anything already running in your environment.</description>
    </item>
    
    <item>
      <title>PsTools - Auto Accept EULA</title>
      <link>https://www.nullzero.io/posts/pstools-auto-accept-eula/</link>
      <pubDate>Wed, 14 Dec 2011 13:44:13 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/pstools-auto-accept-eula/</guid>
      <description>When using or scripting anything from the PsTools suite it can sometimes be an inconvenience to have the EULA appear the first time you run any given tool on a system. In order to avoid this, simply append the /accepteula switch to your command and it will automatically accept and allow the script/command to run.
pslist /accepteula  </description>
    </item>
    
    <item>
      <title>Leveraging PowerShell</title>
      <link>https://www.nullzero.io/posts/leveraging-powershell/</link>
      <pubDate>Thu, 22 Sep 2011 12:46:44 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/leveraging-powershell/</guid>
      <description>While I am no seasoned veteran with PowerShell, I have been using it heavily for the past 6 months or so to help automate tasks and increase the speed of my system management workflow. I have recently noticed that not many admins that I have been talking to, in and out of my place of work, are really leveraging what it has to offer. I realized that looking at an example .</description>
    </item>
    
    <item>
      <title>Linux Command Line System Tools</title>
      <link>https://www.nullzero.io/posts/linux-command-line-system-tools/</link>
      <pubDate>Tue, 28 Jun 2011 16:14:57 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/linux-command-line-system-tools/</guid>
      <description>Below is a link to a document that contains some useful Linux system management command line utilities. Note, these may not work on every distribution of Linux but I have currently tested them on a few of my VM based servers which are running Ubuntu Server 10.04 LTS (Lucid Lynx). I will be updating this document ad-hoc as I find things that are useful.
Linux Management Commands
[Last updated 6/28/11]</description>
    </item>
    
    <item>
      <title>Disabling IPv6 In Ubuntu Server 10.04 LTS</title>
      <link>https://www.nullzero.io/posts/disabling-ipv6-in-ubuntu-server-10-04-lts/</link>
      <pubDate>Fri, 24 Jun 2011 02:03:06 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/disabling-ipv6-in-ubuntu-server-10-04-lts/</guid>
      <description>Step 1 Run the following command to verify if it is enabled or disabled. 0=enabled &amp;amp; 1=disabled
cat /proc/sys/net/ipv6/conf/all/disable_ipv6  Step 2 Using vi add the following lines to /etc/sysctl.conf
the # comment is optional but considered a best practice
#disable ipv6 net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 net.ipv6.conf.lo.disable_ipv6 = 1  vi Notes    Command Function     i Enters insert mode (editing)   esc exits insert mode   :  followed by x saves your work and exits    Reboot and run the first command to verify that is has been disabled.</description>
    </item>
    
    <item>
      <title>Useful VMware Commands</title>
      <link>https://www.nullzero.io/posts/2011-05-29-useful-commands/</link>
      <pubDate>Sun, 29 May 2011 01:59:37 +0000</pubDate>
      
      <guid>https://www.nullzero.io/posts/2011-05-29-useful-commands/</guid>
      <description>The link below points to a Google Spreadsheet that is always being updated. Bookmark, if you wish, and check back every now and again for new commands.
VMware Useful Commands
Updated: 7/21/2011</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.nullzero.io/about/</link>
      <pubDate>Tue, 26 Apr 2011 04:18:44 +0000</pubDate>
      
      <guid>https://www.nullzero.io/about/</guid>
      <description>Senior Technologist passionate about cohesive, scalable data center solutions that serve as the foundational driver for business success. Over twelve years of technical operations and life-cycle management experience, the latter half being focused on transforming traditional IT practices, leading cross-functional teams and architecting solutions that change the way companies deploy and manage IT. Experienced in translating business inputs in to strategic solutions that harmonize cost, performance, reliability, scalability, business value and risk.</description>
    </item>
    
  </channel>
</rss>